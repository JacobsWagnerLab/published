function [x, v, xf, yf] = readCountGene(htseqResultPath)
%--------------------------------------------------------------------------
%function [x,v,xf,yf] = readCountGene(htseqResultPath)
%@author:  Manuel Campos
%@date:    January, 2016
%@copyright 2015-2016 Yale University
%==========================================================================
%**********output********:
%x:    half-gene location along the chromosome (in nucleotides)
%v:    Reads count per gene normalized by the gene length and the total
%       number of mapped reads
%xf/yf:"Filtered", or smoothed data with an average window of size w
%       (variable accessible in the code) corresponding to x and v,
%       respectively
%**********input********:
%htseqResultPath:     
%       path addressing to the output file generated by HTSeq
%           
%==========================================================================
% Map the read count per gene along the genome
% Take the results from htseq_count and the annotation file *.gff to match
% gene names and then find genes locations and associate these locations
% with the read counts. Plot the resulting profile that should resemble a
% frequency marker analysis plot (but not quite the same bcause it is done
% on a gene by gene basis)
%--------------------------------------------------------------------------
%

% Load the GFF annotation file for the genome of reference
annotGFF = GFFAnnotation('Y:\Manuel Campos\Genomic\ExceptionalWords\Rodrigo\GenomeSeq\NC_011916_no23Sand16S_mod.gff');
genLoc = cellfun(@(x) strcmpi('gene',x),annotGFF.Feature);

% Load htseq_count results
% See https://htseq.readthedocs.io/en/release_0.9.1/
% to see how to run HTSeq
fid = fopen(htseqResultPath);%RAC1112count %NA1000_CJW27 %RAC983count
readCounts = textscan(fid, '%s %f');
fclose(fid);clear fid

% Cross-reference both tables
% For Caulobacter crescentus, the CCNA numbers are unique and consistently
% formatted gene references (always the same number of characters per ID)
% and we use this tag
attributes = [annotGFF.Attributes];
% Extract genes attributes (discard info for everything but "genes" in the
% attributes cell array thanks to the indices genLoc identifying genetic
% elements labeled as "gene"
geneAttr = attributes(genLoc);
% Identify the position in the character array decribing a specific "gene"
% where the CCNA number is indicated (right after the label 'tag=CCNA' in
% this case, with a CCNA tag consisting of 10 characters CCNA_XXXXX )
indCCNA = cellfun(@(x) regexp(x,'tag=CCNA_'), geneAttr, 'un', 1);
% Store the gene reference ID (CCNA number in a cell array called CCNA
CCNA = cell(length(indCCNA),1);
for ii=1:length(geneAttr)
    CCNA{ii} = geneAttr{ii}(indCCNA(ii)+4:indCCNA(ii)+13);
end

% Cross-reference the CCNA cell array with the CCNA numbers list from the
% HTSeq output (stored in readCounts{1,1} in this case)
[~, ia ,ib] = intersect(readCounts{1,1},CCNA);
% ORganize the read counts according to the list of corresponding CCNA
% entries from both cell arrays
v = readCounts{1,2}(ia);
% Normalize by the total number of reads
v = v./sum(v); 

% Get the locations of each gene from the attributes loaded from the *.gff
% file
SE = zeros(sum(genLoc),4);
% Gene start
SE(:,1) = double(annotGFF.Start(genLoc));
% Gene end
SE(:,2) = double(annotGFF.Stop(genLoc));
% Gene mid-point
SE(:,3) = mean(SE(:,1:2),2);
% Gene size
SE(:,4) = diff(SE(:,1:2),[],2);

% Associate these numbers with the list of CCNA numbers established by
% cross-referencing the HTSeq count output withe the GFF informations
x = SE(ib, 3);
dl = SE(ib, 4);
% Sort values according to the location on the chromosome and smooth the
% data with an averaging window of 49 genes (variable w)
[x, ix] = sort(x);
v = v(ix)./dl(ix);% Normalize by gene length
w = 49;
xf = filter(ones(1,w)./w, 1, [x(end-w+1:end)-4042929; x]);% 4042929 is the chromosome length!!!
xf = xf(w+1:end);
yf = filter(ones(1,w)./w, 1, [v(end-w+1:end); v]);
yf = yf(w+1:end);

%% Compute the Ori to Ter ratio to estimate the C / S phase period relative
% to the cell cycle time
% Apply a bilinear fit to the data centered on the Ter region
% Get the Ori/Ter ratio (peak-to-trough ratio - PTR)
% which is equal to 2^(C/tau) (or 2^(S/tau) )
% as previously shown (Bremer 1977 J. Theor Biology)
% ----------
% WARNING: you need to know the location of the dif site in ulceotides
% ----------
ft = fittype( '(1+sign(1972347-x))*(a*x+b) + (1+sign(x-1972347))*(c*x+d)',...
    'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
% opts.Robust = 'LAR';
opts.StartPoint = [0 0 0 0];

[fitresult, ~] = fit( x, v, ft, opts );
fval = feval(fitresult,[1,1972347,4042929]);
SrelTiming = log2(mean([fval(1),fval(3)])/fval(2));


%% Display results
%%% Some chromosomal locations are reauired: dif and chromosme length %%%
figure;
plot(1e-6.*x,v./median(v),'.');hold on;
plot(1e-6.*xf(w+1:end),yf(w+1:end)./median(yf(w+1:end)),'-r');
plot(1e-6.*[1,1972347,4042929],fval./median(v),'-k');
set(gca,'fontsize',16,'xcolor','k','ycolor','k','layer','top');set(gca,'xlim',[0 4.050000]);
xlabel('Chromosomal position, Mb','fontsize',16,'color','k','fontweight','b');
ylabel('Read/nt per gene','fontsize',16,'color','k','fontweight','b');
lb = strfind(htseqResultPath,'\');
lb = lb(end)+1;
rb = strfind(htseqResultPath,'.txt');
rb = rb-1;
title(htseqResultPath(lb:rb),'fontsize',16,'color','k','fontweight','b');%RAC1112 \Delta\it{redN} NA1000 CJW27
text(0.05,0.92,{'Rel. replication timing:';[num2str(round(1000*SrelTiming)/10),'%']},...
    'unit','normalized','fontsize',12,'color','k');
clear annotGFF genLoc NA1000CJW27 attributes geneAttr indCCNA CCNA ii C
clear ia ib SE ix w dl
end

% pth2='Y:\TMP\manu\Rodrigo\dSmc.txt';
% figure;
% [xsm,ysm,xfsm,yfsm] = readCountGene(pth2);
% xfsm=xfsm(101:end);
% yfsm=yfsm(101:end);
% title('\Delta\it{smc} exponential phase','fontsize',16,'color','k','fontweight','b');
% set(gca,'ylim',[0 1e-6]);
% figure;plot(xfw1,yfsm./yfw1,'-r','linewidth',2);
% xlabel('Chromosomal position, Mb','fontsize',16,'color','k','fontweight','b');
% set(gca,'fontsize',16,'xcolor','k','ycolor','k','layer','top');set(gca,'xlim',[0 4050000]);
% ylabel({'Ratio \Delta\it{smc} / WT';'exp phase'},'fontsize',16,'color','k','fontweight','b');
% set(gca,'ylim',[.9 1.1]);

%% OR
% pth = 'Y:\Manuel Campos\Genomic\ExceptionalWords\Rodrigo\GenomeSeq\HTSEQcounts';
% fn = dir(pth);
% lg=cat(1,fn.isdir);
% fn=fn(~lg);
% 
% Y=[];
% Ysm=[];
% figure;
% for ii=1:length(fn)
%     subplot(3,4,ii);
%     [x,v,xf,yf] = readCountGene([pth,'\',fn(ii).name]);
%     set(gca,'fontsize',13,'xcolor','k','ycolor','k','layer','top');set(gca,'xlim',[0 4.050000]);
%     set(gca,'ylim',[0 6e-7]);
%     xlabel('Chromosomal position, Mb','fontsize',13,'color','k','fontweight','b');
%     ylabel('Read/nt per gene','fontsize',13,'color','k','fontweight','b');
%     title(fn(ii).name(1:end-4),'fontsize',13,'color','k','fontweight','b');
%     Y=[Y,v];
%     Ysm = [Ysm,yf(101:end)];
% end
% Xsm = xf(101:end);
% 
% R = bsxfun(@rdivide,Y(:,1:end-1),Y(:,end));
% figure;
% for ii=1:11
%     subplot(3,4,ii);
%     plot(1e-6.*x,R(:,ii),'.');
%     set(gca,'fontsize',13,'xcolor','k','ycolor','k','layer','top');set(gca,'xlim',[0 4.050000]);
%     xlabel('Chromosomal position, Mb','fontsize',13,'color','k','fontweight','b');
%     ylabel('Read/nt per gene','fontsize',13,'color','k','fontweight','b');
%     title([fn(ii).name(1:end-4),'/WT'],'fontsize',13,'color','k','fontweight','b');
% end
