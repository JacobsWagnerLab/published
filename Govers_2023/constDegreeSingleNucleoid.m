function [DC,Posr,Cl]=constDegreeSingleNucleoid(cellStruct,pxsize)
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------
% function [DC,Posr,Cl]=constDegree(cellList,pxsize,frameId,cellId)
% @author: Sander Govers- modified from constDegreeSingleCell from - Manuel Campos - modified from Oleksii Sliusarenko and Setsu Hirano
% @date: May 13 2016
% @copyright 2015-2016 Yale University
%=========================================================================
% ********************** input **********************
%cellStruct: CellList you want to analyze (new cellList format), contains nucleoiddata field containing nucleoid outlines generated by objectdetection 
%pxsize: Pixel size
% ********************** output **********************
%DC: Contains degree of constriction for each single cell.
%Posr: Contains relative position where constriction occurs.
%      (This is the most constricting position in the cell.)
%      If there is no constriction seen, this will be nan.
%Cl: Cell length for each cell.
%=========================================================================
%This script allows you to obtain the degree of constriction, relative postion 
%of constriction site, and cell length from a single cell.
%Note that if you don't set polarity for your cells, relative position is not oriented.
%-------------------------------------------------------------------------
%-------------------------------------------------------------------------

DC=[];
Posr=[];
Cl=[];

%signal1 contains DAPI signal

if ~isempty(cellStruct) && isfield(cellStruct,'signal1') && ~isempty(cellStruct.signal1)
        % get constriction profile
        prf = cellStruct.signal1;   
        if isempty(prf) 
            return;
        end
        for ii=1:2
            prf = 0.5*prf + 0.25*(prf([1 1:end-1])+prf([2:end end]));
        end
        minima = [false reshape((prf(2:end-1)<prf(1:end-2))&(prf(2:end-1)<prf(3:end)),1,[]) false];
        if isempty(minima) || sum(prf)==0
            minsize=0;
            ctpos = [];
        else
            im = find(minima);
%             minsize = 0;
%             ctpos = 0;
            dh = zeros(1, length(im));
            dhi = zeros(1, length(im));
            hgt = zeros(1, length(im));
            for k=1:length(im)
                ii=im(k);
                half1 = prf(1:ii-1);
                half2 = prf(ii+1:end);
                dh1 = max(half1)-prf(ii);
                dh2 = max(half2)-prf(ii);
                dh(k) = min(dh1,dh2);
                dhi(k) = mean([dh1 dh2]);
                hgt(k) = prf(ii)+dhi(k);
            end
            [~,ii] = max(dh);
            minsizeabs = dhi(ii);
            minsize = minsizeabs/hgt(ii);%DC
            ctpos = im(ii);
            ctposr = cellStruct.lengthvector(ctpos)/cellStruct.length;
            if isempty(minsize), minsize=0; end
        end
        DC=[DC minsize]; % degree of constriction
        if isempty(ctpos)
            ctposr = nan;
        end
        Posr = [Posr ctposr];% postion where most constricted
        Cl=[Cl pxsize*cellStruct.length];
end

end