function collectCellInfoTS
% Collect cell information for a cells structure from time-lapse images.
% Cell areas are assumed to be saved into same folder as *c1_mask.* files,
% each mask having it's unique cell ID that consistent in all frames. 
% Raw image data is included as cropped images for each cell.

% Requires cell_info.mat file in the same folder. The file is generated 
% during tracking using trackCells.m function.

%  Assumes the following filenames: 
%   ***t**xy**c*.tif
%       *c1.tif - phase contrast
%       *c1_mask.tif - mask file with each masking having unique number
%       *c2.tif - fluo1 channel
%       *c3.itf - fluo2 channel

% 5/4/21 Jarno Makela

no_fluo_channels = 1;           % number of fluorescence channels
pixel = 0.0666;                 % pixel size (um)
padding = 10;                   % extra area (pixels in all directions) around cell for cropped images
min_frames = 5;                 % minimum number of frames for a cell

% find image mask files and extract XY number
images_mask_all = dir('*c1_mask.*');
for ii = 1:length(images_mask_all)
    newStr = split(images_mask_all(ii).name,["xy","c1_mask"]);
    images_mask_all(ii).XY = str2num(newStr{2});
    newStr2 = split(images_mask_all(ii).name,"c1_mask");
    images_mask_all(ii).base = newStr2{1};
end

% generated by trackCells.m function
load('cell_info.mat')

% unique XYs and find first XY values
uniq_XY = unique([images_mask_all.XY]);
images_mask = images_mask_all([images_mask_all.XY] == uniq_XY(1));

% find unique fluorescence frames for each channel
if no_fluo_channels == 1  
    I1 = imread([images_mask(1).base 'c2.tif']);
    p = 2;
    while true
        I = imread([images_mask(p).base 'c2.tif']);
        sameI = isequal(I1,I);
        if sameI == 1
            p = p + 1;
        else
            break
        end
    end
    c2_uniq_frames = 1:(p-1):length(images_mask);   
elseif no_fluo_channels == 2
    % fluo1
    I1 = imread([images_mask(1).base 'c2.tif']);
    p = 2;
    while true
        I = imread([images_mask(p).base 'c2.tif']);
        sameI = isequal(I1,I);
        if sameI == 1
            p = p + 1;
        else
            break
        end
    end
    c2_uniq_frames = 1:(p-1):length(images_mask); 
    % fluo2
    I1 = imread([images_mask(1).base 'c3.tif']);
    p = 2;
    while true
        I = imread([images_mask(p).base 'c3.tif']);
        sameI = isequal(I1,I);
        if sameI == 1
            p = p + 1;
        else
            break
        end
    end
    c3_uniq_frames = 1:(p-1):length(images_mask); 
    
elseif no_fluo_channels == 3
    % fluo1
    I1 = imread([images_mask(1).base 'c2.tif']);
    p = 2;
    while true
        I = imread([images_mask(p).base 'c2.tif']);
        sameI = isequal(I1,I);
        if sameI == 1
            p = p + 1;
        else
            break
        end
    end
    c2_uniq_frames = 1:(p-1):length(images_mask);
    % fluo2
    I1 = imread([images_mask(1).base 'c3.tif']);
    p = 2;
    while true
        I = imread([images_mask(p).base 'c3.tif']);
        sameI = isequal(I1,I);
        if sameI == 1
            p = p + 1;
        else
            break
        end
    end
    c3_uniq_frames = 1:(p-1):length(images_mask);
    % fluo3
    I1 = imread([images_mask(1).base 'c4.tif']);
    p = 2;
    while true
        I = imread([images_mask(p).base 'c4.tif']);
        sameI = isequal(I1,I);
        if sameI == 1
            p = p + 1;
        else
            break
        end
    end
    c4_uniq_frames = 1:(p-1):length(images_mask);
end

for hh = 1:length(uniq_XY)  % XY fields
    % image_mask files only for one XY
    images_mask = images_mask_all([images_mask_all.XY] == uniq_XY(hh));
    
    % choose only specific XY
    mask = [cell_info.XY]' == uniq_XY(hh);
    cells = cell_info(mask);
    
    % initialize cells fields
    cells(1).mask = [];
    cells(1).phase = [];
    if no_fluo_channels == 1 
        cells(1).fluo1 =[];
    elseif no_fluo_channels == 2 
        cells(1).fluo1 = [];
        cells(1).fluo2 = [];
	elseif no_fluo_channels == 3 
        cells(1).fluo1 = [];
        cells(1).fluo2 = [];
        cells(1).fluo3 = [];
    end

	final_frame = length(images_mask);
    for kk = 1:final_frame % frames in single XY
        % load mask
        bw_mask = imread(images_mask(kk).name);

        % load fluorescence channel images
        % also filter fluorescence images with tophat to remove background
        newStr = split(images_mask(kk).name,'c1_mask.tif');
        if no_fluo_channels == 0
            ph_I = imread([newStr{1} 'c1.tif']);
        elseif no_fluo_channels == 1 && sum(kk == c2_uniq_frames) == 1
            ph_I = imread([newStr{1} 'c1.tif']);
            fl1_I = imread([newStr{1} 'c2.tif']);
        elseif no_fluo_channels == 2
            ph = imread([newStr{1} 'c1.tif']);
            if sum(kk == c2_uniq_frames) == 1
                fl1_I = imread([newStr{1} 'c2.tif']);
            end
            if sum(kk == c3_uniq_frames) == 1
                fl2_I = imread([newStr{1} 'c3.tif']);
            end
        elseif no_fluo_channels == 3
            ph = imread([newStr{1} 'c1.tif']);
            if sum(kk == c2_uniq_frames) == 1
                fl1_I = imread([newStr{1} 'c2.tif']);
            end
            if sum(kk == c3_uniq_frames) == 1
                fl2_I = imread([newStr{1} 'c3.tif']);
            end
            if sum(kk == c4_uniq_frames) == 1
                fl3_I = imread([newStr{1} 'c4.tif']);
            end
        end

        % cellIDs
        cellIDs = unique(bw_mask(:));
        cellIDs = double(cellIDs(cellIDs ~= 0));

        for ii = 1:length(cellIDs) % masks
            % cell mask from first time point
            mask_cell = bw_mask == cellIDs(ii);

            % crop image for each channel using padding around the mask
            % crop only if unique frames exists for channel
            s = regionprops(mask_cell,'BoundingBox');
            s = s(1);
            pd = padding;
            if no_fluo_channels == 0
                mask_crop = imcrop(mask_cell,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                ph_crop = imcrop(ph_I,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
            elseif no_fluo_channels == 1
                mask_crop = imcrop(mask_cell,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                ph_crop = imcrop(ph_I,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                if sum(kk == c2_uniq_frames) == 1
                    fl1_crop = imcrop(fl1_I,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                end
            elseif no_fluo_channels == 2
                mask_crop = imcrop(mask_cell,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                ph_crop = imcrop(ph,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                if sum(kk == c2_uniq_frames) == 1
                    fl1_crop = imcrop(fl1_I,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                end
                if sum(kk == c3_uniq_frames) == 1
                    fl2_crop = imcrop(fl2_I,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                end
            elseif no_fluo_channels == 3
                mask_crop = imcrop(mask_cell,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                ph_crop = imcrop(ph,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                if sum(kk == c2_uniq_frames) == 1
                    fl1_crop = imcrop(fl1_I,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                end
                if sum(kk == c3_uniq_frames) == 1
                    fl2_crop = imcrop(fl2_I,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                end
                if sum(kk == c4_uniq_frames) == 1
                    fl3_crop = imcrop(fl3_I,s.BoundingBox+[-pd -pd 2*pd-1 2*pd-1]);
                end
            end
            % find row of cellID
            vector = [cells.ID];
            index = find(vector == cellIDs(ii));

            % insert mask into cells
            if isempty(cells(index).mask)
                cells(index).mask{1} = mask_crop;
            else
                cells(index).mask{end+1} = mask_crop;
            end
            % insert phase into cells
            if isempty(cells(index).phase)
                cells(index).phase{1} = ph_crop;
            else
                cells(index).phase{end+1} = ph_crop;
            end
            % insert fluorescence channels
            if no_fluo_channels == 1
                if isempty(cells(index).fluo1)
                    % unique frame for fluo1
                    if sum(kk == c2_uniq_frames) == 1
                        cells(index).fluo1{1} = fl1_crop;
                    else
                        cells(index).fluo1{1} = [];
                    end
                else
                    % unique frame for fluo1
                    if sum(kk == c2_uniq_frames) == 1
                        cells(index).fluo1{end+1} = fl1_crop;
                    else
                        cells(index).fluo1{end+1} = [];
                    end
                end
            elseif no_fluo_channels == 2 
                if isempty(cells(index).fluo1)
                    % unique frame for fluo1
                    if sum(kk == c2_uniq_frames) == 1
                        cells(index).fluo1{1} = fl1_crop;
                    else
                        cells(index).fluo1{1} = [];
                    end
                else
                    % unique frame for fluo1
                    if sum(kk == c2_uniq_frames) == 1
                        cells(index).fluo1{end+1} = fl1_crop;
                    else
                        cells(index).fluo1{end+1} = [];
                    end
                end
                if isempty(cells(index).fluo2)
                    % unique frame for fluo2
                    if sum(kk == c3_uniq_frames) == 1
                        cells(index).fluo2{1} = fl2_crop;
                    else
                        cells(index).fluo2{1} = [];
                    end
                else
                    % unique frame for fluo2
                    if sum(kk == c3_uniq_frames) == 1
                        cells(index).fluo2{end+1} = fl2_crop;
                    else
                        cells(index).fluo2{end+1} = [];
                    end
                end
            elseif no_fluo_channels == 3 
                if isempty(cells(index).fluo1)
                    % unique frame for fluo1
                    if sum(kk == c2_uniq_frames) == 1
                        cells(index).fluo1{1} = fl1_crop;
                    else
                        cells(index).fluo1{1} = [];
                    end
                else
                    % unique frame for fluo1
                    if sum(kk == c2_uniq_frames) == 1
                        cells(index).fluo1{end+1} = fl1_crop;
                    else
                        cells(index).fluo1{end+1} = [];
                    end
                end
                if isempty(cells(index).fluo2)
                    % unique frame for fluo2
                    if sum(kk == c3_uniq_frames) == 1
                        cells(index).fluo2{1} = fl2_crop;
                    else
                        cells(index).fluo2{1} = [];
                    end
                else
                    % unique frame for fluo2
                    if sum(kk == c3_uniq_frames) == 1
                        cells(index).fluo2{end+1} = fl2_crop;
                    else
                        cells(index).fluo2{end+1} = [];
                    end
                end
                if isempty(cells(index).fluo3)
                    % unique frame for fluo3
                    if sum(kk == c4_uniq_frames) == 1
                        cells(index).fluo3{1} = fl3_crop;
                    else
                        cells(index).fluo3{1} = [];
                    end
                else
                    % unique frame for fluo3
                    if sum(kk == c4_uniq_frames) == 1
                        cells(index).fluo3{end+1} = fl3_crop;
                    else
                        cells(index).fluo3{end+1} = [];
                    end
                end
            end
        end
    end
    
    % convert area from px into um and cells with less than min_frames
    indeces = [];
    for ii = 1:length(cells)
        % check that cell has enough frames
        if length(cells(ii).area) >= min_frames
            cells(ii).area = cells(ii).area.*pixel^2;
        else
            indeces = [indeces ii];
        end 
    end
    cells(indeces) = [];

    % save individual cells file
    folderName = split(pwd,'\');
    name_cells = char(strcat(folderName{end}, '_XY', num2str(uniq_XY(hh)) ,'_cells.mat'));
    save(name_cells,'cells')
    
    disp(['XY' num2str(uniq_XY(hh)) ' done'])
end


end

